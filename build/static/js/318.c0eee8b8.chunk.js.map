{"version":3,"file":"static/js/318.c0eee8b8.chunk.js","mappings":"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","sources":["components/Admin/Sidebar/AdminNavbar.js","components/Admin/Sidebar/SidebarData.js","components/Admin/Sidebar/UploadExcel.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { Navbar } from 'react-bootstrap';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport './Navbar.css'\nimport { SidebarData } from './SidebarData';\nfunction AdminNavbar() {\n  return (\n    <>\n      \n        <Navbar bg=\"dark\" variant='dark' expand={false}>\n          <Container fluid>\n            \n            <Navbar.Toggle  />\n            <Navbar.Offcanvas\n              placement=\"start\"\n            >\n              <Offcanvas.Header closeButton>\n                <Offcanvas.Title >\n                  Admin Panel\n                </Offcanvas.Title>\n              </Offcanvas.Header>\n              <Offcanvas.Body style={{backgroundColor:'black',fontSize:'20px'}}>\n                <Nav className=\"justify-content-start flex-grow-1 pe-3\">\n\n                {SidebarData.map((item, index) => {\n                return (\n                    <Nav.Link  href={\"/#\"+item.path} className={item.cName}>{item.icon}<span className='span'> </span>{item.title}</Nav.Link>\n                    \n                );\n                })}\n                  \n                </Nav>\n                \n              </Offcanvas.Body>\n            </Navbar.Offcanvas>\n          </Container>\n        </Navbar>\n      \n    </>\n  );\n}\n\nexport default AdminNavbar;","import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as MdIcons from 'react-icons/md';\nimport * as RiIcons from 'react-icons/ri';\n\nexport const SidebarData = [\n  {\n    title: 'Add Item',\n    path: '/admin',\n    icon: <AiIcons.AiFillHome />,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Pending Orders',\n    path: '/pendingdelivery',\n    icon: <MdIcons.MdOutlineDeliveryDining />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Completed Orders',\n    path: '/completedorders',\n    icon: <MdIcons.MdOutlineDeliveryDining />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'User Complaints',\n    path: '/allcomplaints',\n    icon: <RiIcons.RiFileList2Fill />,\n    cName: 'nav-text'\n  },\n\n  {\n    title: 'Add New',\n    path:'/AddNew',\n    icon: <MdIcons.MdOutlineProductionQuantityLimits/>,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Logout',\n    path: '/',\n    icon: <RiIcons.RiLogoutBoxRFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Upload Excel',\n    path:'/upload',\n    icon: <AiIcons.AiOutlineUpload/>,\n    cName: 'nav-text'\n  },\n];","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { Button , Col,Row,Container} from 'react-bootstrap';\r\nimport  { useState } from 'react';\r\nimport AdminHeader from \"../../Admin/AdminHeader\";\r\nimport AdminNavbar from \"./AdminNavbar\";\r\nimport axios from 'axios';\r\nimport { getCookie } from '../../Cookies';\r\nimport url from '../../../Uri';\r\nconst UploadExcel = () => {\r\n  const [selectedproductFile, setSelectedProductFile] = useState();\r\n  const [selectedcategoryFile, setSelectedCategoryFile] = useState();\r\n  const [selectedfilterFile, setSelectedFilterFile] = useState();\r\n  const [selectedbrandsFile, setSelectedBrandsFile] = useState();\r\n  const [selectedposterFile, setSelectedPosterFile] = useState();\r\n  const [selecteddealsFile, setSelectedDealsFile] = useState();\r\n  const [selectedisInNavbarFile, setSelectedisInNavbarFile] = useState();\r\n  const [selectedextraCategoriesFile, setSelectedextraCategoriesFile] = useState();\r\n  const [isProductFilePicked, setIsProductFilePicked] = useState(false);\r\n  const [isCategoryFilePicked, setIsCategoryFilePicked] = useState(false);\r\n  const [isFilterFilePicked, setIsFilterFilePicked] = useState(false);\r\n  const [isBrandsFilePicked, setIsBrandsFilePicked] = useState(false);\r\n  const [isPosterFilePicked, setIsPosterFilePicked] = useState(false);\r\n  const [isDealsFilePicked, setIsDealsFilePicked] = useState(false);\r\n  const [isInNavbarFilePicked, setIsInNavbarFilePicked] = useState(false);\r\n  const [isExtraCategoriesFilePicked, setIsExtraCategoriesFilePicked] = useState(false);\r\n\r\n\r\n   var token = getCookie(\"jwtToken\");\r\n\r\n  const ProductFileHandler = (event) => {\r\n    setSelectedProductFile(event.target.files[0]);\r\n    setIsProductFilePicked(true);\r\n  };\r\n\r\n  const handleProductsFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedproductFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/products\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in products\");\r\n      // toast.warn(\"Error In Fetching orders\",error)\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const CategoryFileHandler = (event) => {\r\n    setSelectedCategoryFile(event.target.files[0]);\r\n    setIsCategoryFilePicked(true);\r\n  };\r\n\r\n  const handleCategoryFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedcategoryFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/Categories\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in Categories:\",error);\r\n      // toast.warn(\"Error In Fetching orders\",error)\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const FilterFileHandler = (event) => {\r\n    setSelectedFilterFile(event.target.files[0]);\r\n    setIsFilterFilePicked(true);\r\n  };\r\n\r\n  const handleFilterFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedfilterFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/filters\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in filters:\",error)\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const BrandFileHandler = (event) => {\r\n    setSelectedBrandsFile(event.target.files[0]);\r\n    setIsBrandsFilePicked(true);\r\n  };\r\n\r\n  const handleBrandFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedbrandsFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/shopByBrands\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in shopByBrands:\",error)\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const PosterFileHandler = (event) => {\r\n    setSelectedPosterFile(event.target.files[0]);\r\n    setIsPosterFilePicked(true);\r\n  };\r\n\r\n  const handlePosterFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedposterFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/offerposters\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"error in offerposters:\",error)\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const DealsFileHandler = (event) => {\r\n    setSelectedDealsFile(event.target.files[0]);\r\n    setIsDealsFilePicked(true);\r\n  };\r\n\r\n  const handleDealsFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selecteddealsFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/deals\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"error in deals:\",error)\r\n    })\r\n\r\n\r\n  };\r\n\r\n\r\n  const IsInNavbarFileHandler = (event) => {\r\n    setSelectedisInNavbarFile(event.target.files[0]);\r\n    setIsInNavbarFilePicked(true);\r\n  };\r\n\r\n  const handleIsInNavbarFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedcategoryFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/isCategoryInNavbar\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in Categories:\",error);\r\n      // toast.warn(\"Error In Fetching orders\",error)\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n  const ExtraCategoriesFileHandler = (event) => {\r\n    setSelectedextraCategoriesFile(event.target.files[0]);\r\n    setIsExtraCategoriesFilePicked(true);\r\n  };\r\n\r\n  const handleExtraCategoriesFileSubmission = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', selectedcategoryFile);\r\n    console.log(\"Form Data\",formData)\r\n    alert(\"Submit Clicked\")\r\n\r\n    axios.post(url+\"/excel/parentCategories\",formData,{\r\n      headers:{\r\n        \"Authorization\": \"Bearer \"+token\r\n      },\r\n      \r\n    }).then(function(response){\r\n      console.log(response.data)\r\n    }).catch(function(error){\r\n      console.log(\"Error in Categories:\",error);\r\n      // toast.warn(\"Error In Fetching orders\",error)\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <AdminHeader/> */}\r\n        <AdminNavbar/>\r\n        <Container className=\"uploadexcel\" style={{padding:'50px'}}>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload Your Products Excel Datasheet here</h5>\r\n          \r\n            <input  type=\"file\" name=\"file\" accept=\".xlsx, .xls, .csv\" onChange={ProductFileHandler} />\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleProductsFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isProductFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selectedproductFile.name}</p>\r\n                <p ><b>Filetype:</b> {selectedproductFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selectedproductFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selectedproductFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n              <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload Your Categories Datasheet here</h5>\r\n          \r\n            <input  type=\"file\" name=\"categoriesfile\" accept=\".xlsx, .xls, .csv\" onChange={CategoryFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleCategoryFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isCategoryFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selectedcategoryFile.name}</p>\r\n                <p ><b>Filetype:</b> {selectedcategoryFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selectedcategoryFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selectedcategoryFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload filter criterias </h5>\r\n         \r\n            <input  type=\"file\" name=\"filtercriteria\" accept=\".xlsx, .xls, .csv\" onChange={FilterFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleFilterFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isFilterFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selectedfilterFile.name}</p>\r\n                <p ><b>Filetype:</b> {selectedfilterFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selectedfilterFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selectedfilterFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload shop by brands </h5>\r\n          \r\n            <input  type=\"file\" name=\"shopbybrands\" accept=\".xlsx, .xls, .csv\" onChange={BrandFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleBrandFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isBrandsFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selectedbrandsFile.name}</p>\r\n                <p ><b>Filetype:</b> {selectedbrandsFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selectedbrandsFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selectedbrandsFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload mega mini posters </h5>\r\n            \r\n            <input  type=\"file\" name=\"megaminiposters\" accept=\".xlsx, .xls, .csv\" onChange={PosterFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handlePosterFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isPosterFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selectedposterFile.name}</p>\r\n                <p ><b>Filetype:</b> {selectedposterFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selectedposterFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selectedposterFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload Deals </h5>\r\n          \r\n            <input  type=\"file\" name=\"deals\" accept=\".xlsx, .xls, .csv\" onChange={DealsFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleDealsFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isDealsFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selecteddealsFile.name}</p>\r\n                <p ><b>Filetype:</b> {selecteddealsFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selecteddealsFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selecteddealsFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload Is In Navbar </h5>\r\n          \r\n            <input  type=\"file\" name=\"deals\" accept=\".xlsx, .xls, .csv\" onChange={IsInNavbarFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleIsInNavbarFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isDealsFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selecteddealsFile.name}</p>\r\n                <p ><b>Filetype:</b> {selecteddealsFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selecteddealsFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selecteddealsFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n\r\n          <hr></hr>\r\n          <Row>\r\n            <Col sm={6}>\r\n            <h5 >Upload Extra Categories </h5>\r\n          \r\n            <input  type=\"file\" name=\"deals\" accept=\".xlsx, .xls, .csv\" onChange={ExtraCategoriesFileHandler}/>\r\n            <br></br><br></br>\r\n            <Button variant='flat' size=\"m\" onClick={handleExtraCategoriesFileSubmission}>Submit</Button>\r\n            <br></br><br></br>\r\n            </Col>\r\n            <Col sm={6}>\r\n                  {isDealsFilePicked ? (\r\n              <div style={{fontSize:'15px'}}>\r\n                <p ><b>Filename:</b> {selecteddealsFile.name}</p>\r\n                <p ><b>Filetype:</b> {selecteddealsFile.type}</p>\r\n                <p ><b>Size in bytes:</b> {selecteddealsFile.size}</p>\r\n                <p >\r\n                  <b>lastModifiedDate:</b>{' '}\r\n                  {selecteddealsFile.lastModifiedDate.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p>Select a file to show details</p>\r\n            )}\r\n      \r\n            </Col>\r\n          </Row>\r\n      \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadExcel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class UploadExcel extends React.Component {\r\n//     constructor(props) {\r\n//       super(props);\r\n//       this.handleSubmit = this.handleSubmit.bind(this);\r\n//       this.fileInput = React.createRef();\r\n//     }\r\n//     handleSubmit(event) {\r\n//       event.preventDefault();\r\n//       alert(\r\n//         `Selected file - ${this.fileInput.current.files[0].name}`\r\n//       );\r\n//       console.log(this.fileInput.current)\r\n//     }\r\n\r\n//     render() {\r\n//       return (\r\n//         <center>\r\n//           <h1 style={{marginTop:\"50px\"}}>Upload Your Excel Datasheet here</h1>\r\n//         <form onSubmit={this.handleSubmit}>\r\n//           <label>\r\n//             Upload file:\r\n//             <input style={{marginLeft:\"20px\"}} type=\"file\" ref={this.fileInput} />\r\n//           </label>\r\n//           <br></br>\r\n//           <Button type=\"submit\">Submit</Button>\r\n//         </form>\r\n//         </center>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//   const root = ReactDOM.createRoot(\r\n//     document.getElementById('root')\r\n//   );\r\n//   root.render(<FileInput />);\r\n// export default UploadExcel;"],"names":["bg","variant","expand","fluid","placement","closeButton","style","backgroundColor","fontSize","className","SidebarData","item","index","href","path","cName","icon","title","useState","selectedproductFile","setSelectedProductFile","selectedcategoryFile","setSelectedCategoryFile","selectedfilterFile","setSelectedFilterFile","selectedbrandsFile","setSelectedBrandsFile","selectedposterFile","setSelectedPosterFile","selecteddealsFile","setSelectedDealsFile","setSelectedisInNavbarFile","setSelectedextraCategoriesFile","isProductFilePicked","setIsProductFilePicked","isCategoryFilePicked","setIsCategoryFilePicked","isFilterFilePicked","setIsFilterFilePicked","isBrandsFilePicked","setIsBrandsFilePicked","isPosterFilePicked","setIsPosterFilePicked","isDealsFilePicked","setIsDealsFilePicked","setIsInNavbarFilePicked","setIsExtraCategoriesFilePicked","token","getCookie","padding","sm","type","name","accept","onChange","event","target","files","size","onClick","formData","FormData","append","console","log","alert","axios","url","headers","then","response","data","catch","error","lastModifiedDate","toLocaleDateString"],"sourceRoot":""}