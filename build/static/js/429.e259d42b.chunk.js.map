{"version":3,"file":"static/js/429.e259d42b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/DisplayCategories/CategoriesToDisplay.js","components/DisplayCategories/SelCatProducts.js","components/offers/Slideshow.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from \"react\";\r\n\r\nimport { Nav, Navbar,  Container,NavDropdown, Offcanvas, ListGroup ,Image} from 'react-bootstrap';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CategoriesToDisplay.css\"\r\n\r\nfunction CategoriesToDisplay({ categoryDetail }) {\r\n  var navigate = useNavigate();\r\n\r\n  var cards = <div>\r\n    <img className=\"logo_mahavir\"  alt=\"Mandala\" />\r\n  </div>\r\n\r\n  function handleSubSubCategoriesClick(category, subCategory, subSubCategory, modelNumber) {\r\n    localStorage.setItem(\"Category\", category);\r\n    localStorage.setItem(\"SubCategory\", subCategory);\r\n    localStorage.setItem(\"SubSubCategory\", subSubCategory);\r\n\r\n    localStorage.setItem(\"Model Number\", modelNumber);\r\n    \r\n    navigate(\"/\" + category + \"/\" + subCategory + \"/\" + subSubCategory);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Category\" >\r\n\r\n      {['sm'].map((expand) => (\r\n\r\n        <Navbar className=\"cat_nav\" style={{background:'#2b2d42', zIndex: '1', height:60}} bg=\"dark\" key={expand}  expand={expand} variant=\"dark\">\r\n          <Container fluid>\r\n          \r\n            <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} />\r\n            <Navbar.Offcanvas\r\n              id={`offcanvasNavbar-expand-${expand}`}\r\n              aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n              placement=\"start\"\r\n            >\r\n              <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n                  CATEGORIES\r\n                </Offcanvas.Title>\r\n              </Offcanvas.Header>\r\n              <Offcanvas.Body>\r\n              \r\n                <Nav className=\"justify-content-center flex-grow-1 pe-3\">\r\n                    \r\n                  {\r\n\r\n                    cards = categoryDetail.map(index => {\r\n                      return (\r\n\r\n                        <Nav.Link >\r\n                          <Image style={{background:\"none\"}} thumbnail='true'  src={index.category_image} className=\"categoryImage\" ></Image>\r\n                          \r\n                          <NavDropdown right className=\"catdropdown\"  title={index.category} renderMenuOnMount={true}>\r\n                            {\r\n                              index.subCategories.map(subCat => {\r\n                                return (\r\n                                  <div style={{ display: 'block', padding: 10 ,width:'max-content'}}>\r\n                                    <h5>{subCat.subCategoryName}</h5>\r\n                                    <ListGroup >\r\n                                      {\r\n                                        subCat.subSubCategories.map(subSubCategories => {\r\n                                          return (\r\n\r\n                                            <ListGroup.Item style={{marginTop:'4px'}} onClick={() => handleSubSubCategoriesClick(index.category, subCat.subCategoryName, subSubCategories.subSubCategoryName, subSubCategories.modelNumber)}>{subSubCategories.subSubCategoryName}</ListGroup.Item>\r\n\r\n                                          );\r\n                                        })\r\n                                      }\r\n                                    </ListGroup>\r\n                                  </div>\r\n\r\n\r\n                                );\r\n\r\n                              })\r\n                            }\r\n\r\n                          </NavDropdown>\r\n\r\n\r\n                        </Nav.Link>\r\n\r\n                      )\r\n                    })\r\n                  }\r\n                </Nav>\r\n\r\n              </Offcanvas.Body>\r\n            </Navbar.Offcanvas>\r\n          </Container>\r\n        </Navbar>\r\n\r\n      ))}\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default CategoriesToDisplay;","import { margin } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport CategoriesToDisplay from \"./CategoriesToDisplay\";\r\nimport {Card,Button, Container, CardGroup,Form} from \"react-bootstrap\";\r\n\r\nimport { Row,Col } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles.css\"\r\n\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Header from \"../Header\";\r\nimport NavbarOffcanvas from \"react-bootstrap/esm/NavbarOffcanvas\";\r\nimport FilterProduct from \"../Filters/FilterProduct\";\r\nimport TestFilterProducts from \"../Filters/TestFilterProducts\";\r\n\r\nimport url from \"../../Uri\";\r\nimport Slideshow from \"../offers/Slideshow\";\r\n\r\nimport \"../../App.css\";\r\n\r\nimport {BsArrowUp} from \"react-icons/bs\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n\r\nvar modelNumsToCompare = new Set();\r\nvar flag = false;\r\n\r\nconst SelCatProducts=()=>{\r\n\r\n  \r\n    const navigate = useNavigate();\r\n\r\n    const [products,setProduct]= useState([]);\r\n    const [isProductsFetched,setIsProductsFetched] = useState(false);\r\n    const [isTimeout,setIsTimeOut] = useState(false);\r\n    var productsArray=[];\r\n\r\n    var productsToCompare=[];\r\n\r\n    const [offerPosters,setOfferPosters] = useState([]);\r\n    const [isOfferPostersFetched,setIsOfferPostersFetched] = useState(false);\r\n\r\n    // console.log(localStorage.getItem(\"Category\"));\r\n\r\n    // const [cookies,SetCookie] = useCookies(['modelNumsToCompare'])\r\n    // const [isFormLoaded,SetIsFormLoaded] = useState(false)\r\n    // const [isButtonNeeded,SetIsButtonNeeded] = useState(false);\r\n\r\n    // console.log(\"Cookies\",cookies.CompareModels)\r\n    // console.log(\"Cookies size\",cookies.CompareModelsLength)\r\n\r\n    // console.log(\"Models To Compare\",localStorage.getItem(\"CompareModels\"))\r\n    const [isAddCompareClicked, setisAddCompareClicked] = useState(false);\r\n    const [change, setChange] = useState(0);\r\n\r\n    const [isCompareBtnClicked,SetIsCompareBtnClicked] = useState(false);\r\n\r\n    const [isAddToCompareProductsFetched,SetIsAddToCompareProductsFetched] =  useState(false);\r\n    const [addToCompareProducts,SetAddToCompareProducts] = useState([]);\r\n\r\n    // const [Posters, setPosters] = useState([]);\r\n    // const [isPostersFetched, setIsPostersFetched] = useState(false);\r\n\r\n    const [MegaPoster,setMegaPoster] = useState([]);\r\n    const [isMegaPosterFetched,setIsMegaPosterFetched] = useState(false);\r\n\r\n    // const [MiniPoster,setMiniPoster] = useState([]);\r\n\r\n    if(localStorage.getItem(\"CompareModels\")===null){\r\n        var str=\"\";\r\n    }else{\r\n        var str= localStorage.getItem(\"CompareModels\")+\",\";\r\n        var arr = str.split(\",\");\r\n        arr.map(index=>{\r\n            modelNumsToCompare.add(index);\r\n        })\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if( !isMegaPosterFetched ){\r\n            axios({\r\n                method:\"get\",\r\n                url:url+\"/get-offers\"\r\n              }).then(function(response){\r\n                // console.log(response);\r\n                // console.log(\"Poster response: \",response.data)\r\n                if(response.status==200){\r\n                  response.data.map(index=>{\r\n                        if(index.isMegaPoster===\"YES\"&& index.category==localStorage.getItem(\"Category\")) {\r\n                            // console.log(\"in if \")\r\n                            MegaPoster.push(index)\r\n                        }\r\n                  })\r\n                  \r\n                //   setOfferPosters(response.data);\r\n                  \r\n                //   console.log(\"OfferPosters\",offerPosters);\r\n                //   console.log(\"Mini Posters: \",MiniPoster)\r\n                //   setIsOfferPostersFetched(true);\r\n                  setIsMegaPosterFetched(true);\r\n                }\r\n                \r\n            }).catch(function(error){\r\n            console.log(\"error in get-offers\");\r\n            })\r\n        }\r\n    })\r\n\r\n    \r\n   \r\n    \r\n\r\n    var offerPoster = <div>\r\n        <img className=\"logo_mahavir\"  alt=\"Mandala\" />\r\n      </div>\r\n\r\n    \r\n    \r\n    const handleOfferPosterOnClick=(modelNumbers)=>{\r\n      // alert(\"Offer Poster clicked\");\r\n\r\n      console.log(modelNumbers);\r\n      localStorage.setItem(\"offerPostersModelNumber\",modelNumbers)\r\n    //   console.log(localStorage.getItem(\"offerPostersModelNumber\"))\r\n      navigate(\"/offers\")\r\n    }\r\n\r\n    function compareProducts(){\r\n        if(localStorage.getItem(\"CompareModels\")===null || localStorage.getItem(\"CompareModels\")===\"\"){\r\n            toast.error(<b>Please select products to compare</b>);\r\n        }\r\n        else{\r\n            navigate(\"/compareproducts\")\r\n        }\r\n    }\r\n\r\n    var mybutton = document.getElementById(\"myBtn\");\r\n\r\n    window.onscroll = function() {scrollFunction()};\r\n\r\n    function scrollFunction() {\r\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n        mybutton.style.display = \"block\";\r\n    } else {\r\n        mybutton.style.display = \"none\";\r\n    }\r\n    }\r\n\r\n    // When the user clicks on the button, scroll to the top of the document\r\n    function topFunction() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        // console.log(\"In top Function\")\r\n        // document.body.scrollIntoView();\r\n        // window.location.reload();\r\n    }\r\n\r\n\r\n    function getCompareBtn(){\r\n       \r\n       \r\n          return(               \r\n                (change>0) ? (\r\n                    <Button id=\"comparebtn\" onClick={compareProducts}>Compare</Button>\r\n                ) : (null)\r\n                \r\n           \r\n               \r\n          )\r\n        \r\n    }\r\n\r\n\r\n\r\n    function callProductDetails(index){\r\n        //alert(index);\r\n        console.log(\"Index\",index);\r\n        localStorage.setItem(\"productSelected\",index.modelNumber);\r\n        localStorage.setItem(\"productId\",index.productId)\r\n        // console.log(\"Product Selected\",localStorage.getItem(\"productSelected\"))\r\n        navigate(\"/productDetails\")\r\n      }\r\n  \r\n\r\n    var cards=<div>\r\n        <img className=\"logo_mahavir\" alt=\"God\" />\r\n    </div>\r\n\r\n    const handleAddToCompare=(event)=>{\r\n        \r\n        if (event.target.checked) {\r\n\r\n            // console.log('✅ Checkbox is checked');\r\n            setChange(change+1)\r\n            //document.getElementById(event.value).checked = \"false\"\r\n            // console.log(\"Value\",event.target.value);\r\n            modelNumsToCompare.add(event.target.value);\r\n            alert(event.target.value)\r\n            // console.log(\"ModelNumbers\",modelNumsToCompare)\r\n          } else {\r\n            console.log('⛔ Checkbox is NOT checked');\r\n            //document.getElementById(event.value).checked = \"true\"\r\n            setChange(change-1)\r\n            modelNumsToCompare.delete(event.target.value);\r\n\r\n            // console.log(\"ModelNumbers\",modelNumsToCompare)\r\n          }\r\n\r\n        str=\"\";\r\n        modelNumsToCompare.forEach(element=>{\r\n            //console.log(element);\r\n            str +=  element + \",\";\r\n        })\r\n        str = str.slice(0,str.length-1);\r\n        // console.log(str);\r\n        //localStorage.setItem(\"CompareModels\",str);\r\n        // SetCookie('CompareModels',str,{path:'/'});\r\n        //getCompareBtn();\r\n        localStorage.setItem(\"CompareModels\",str);\r\n        // console.log('Compare Models',localStorage.getItem(\"CompareModels\"))\r\n        setisAddCompareClicked(current => !current);\r\n    }\r\n\r\n    // const setCheckboxes=()=>{\r\n          \r\n\r\n    // }\r\n\r\n    const callFormCheck=(modelNumber)=>{\r\n        if(localStorage.getItem(\"CompareModels\")===null || localStorage.getItem(\"CompareModels\")===\"\"){\r\n            //SetCookie(\"CompareModels\",\"\",{path:\"/\"});\r\n            return(\r\n                <Form>    \r\n                    <Form.Check id={modelNumber} type=\"checkbox\" label = \"Add To Compare\" value={modelNumber} onChange={handleAddToCompare}/>\r\n                </Form>\r\n            );\r\n        }else{\r\n            var modelNums = localStorage.getItem(\"CompareModels\").split(',');\r\n            // console.log(\"Model Nums\",modelNums)\r\n        \r\n            if(modelNums.includes(modelNumber)){\r\n                return(\r\n                    <Form>    \r\n                        <Form.Check id={modelNumber} type=\"checkbox\" label = \"Add To Compare\" value={modelNumber} onChange={handleAddToCompare} defaultChecked=\"true\"/>\r\n                    </Form>\r\n                );\r\n            }\r\n            return(\r\n                <Form>    \r\n                    <Form.Check id={modelNumber} type=\"checkbox\" label = \"Add To Compare\" value={modelNumber} onChange={handleAddToCompare}/>\r\n                </Form>\r\n            )\r\n\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    var modelNums;\r\n    return(\r\n        <>\r\n        <ToastContainer position=\"top-center\"/>\r\n        <Header className=\"header\" style={{position:\"sticky\"}} productList={products}/>\r\n        <div className=\"filterproducts_poster\">\r\n        {\r\n            (isMegaPosterFetched)?(\r\n                \r\n                \r\n                <Slideshow offerPosters={MegaPoster}/>\r\n                \r\n            ):(\r\n                null\r\n            )\r\n        }\r\n        </div>\r\n        {/* <Button onclick={()=>topFunction()} id=\"myBtn\" title=\"Go to top\"><BsArrowUp onClick={topFunction}/></Button> */}\r\n        \r\n                <div>\r\n                    \r\n                    \r\n                        {/* <Header/> */}\r\n                        \r\n                        \r\n{/*                         \r\n                        <Carousel>\r\n                        {\r\n                            \r\n                            (isOfferPostersFetched)?(\r\n                                offerPoster= offerPosters.map(index=>{\r\n                                    //let Base64string = Buffer.from(index.image.data,\"base64\").toString();\r\n                                    \r\n                                    //console.log(\"image\",index.image.data);\r\n                                    // var imgsrc = String.format(\"data:image/jpg;base64,{0}\",index.image.data);\r\n                                    return(\r\n                                        <Carousel.Item interval={1000} onClick={()=>handleOfferPosterOnClick(index.modelNumber)}>\r\n                                        <img id = \"classname\" \r\n                                        className=\"d-block w-100\"\r\n                                        src={\"data:image/png;base64,\" + index.image.data}\r\n                                        alt={index.alt}\r\n                                        height={500}\r\n                                        />                    \r\n                                        </Carousel.Item>\r\n                                    \r\n                                    )\r\n                    \r\n                                })\r\n                            ):(\r\n                                \r\n                                null\r\n                                \r\n                            )\r\n                        }\r\n                        </Carousel> */}\r\n                        {/* <FilterProduct/> */}\r\n                        <TestFilterProducts/>\r\n                        {/* {\r\n\r\n                            (change!=0) ? (\r\n                                \r\n                                    <Button id=\"comparebtn\" onClick={compareProducts}>Compare</Button>  \r\n                                \r\n                                \r\n                            ) : (null)\r\n                        } */}\r\n                        {/* <Row>\r\n                        <Col md={2}>\r\n                            <FilterProduct/>\r\n                        </Col>\r\n                        <Col>\r\n                        <center>\r\n                        <div >\r\n                        \r\n                        <Row> \r\n                            <Col sm={2} style={{backgroundColor: 'antiquewhite'}}>\r\n                                Filters\r\n                            </Col>\r\n                            <Col sm={10}>\r\n                        {\r\n                            (isProductsFetched)?\r\n                                cards = products.map(index=>{\r\n                                    return(\r\n                                        \r\n                                        <Card  style={{ width: '12rem',display: 'inline-table'}} \r\n                                        className=\"mb-2\">\r\n                                            <Card.Img  variant=\"top\" style={{width:200,height:150,alignSelf:\"center\"}} src={\"data:image/png;base64,\" + index.productImage1.data} onClick={()=>callProductDetails(index)}/>\r\n                                            <Card.Body>\r\n                                            <Card.Title as=\"h6\" onClick={()=>callProductDetails(index)}>{index.productName}</Card.Title>\r\n                                            <Card.Text onClick={()=>callProductDetails(index)}>\r\n                                            {index.productDescription}\r\n                                            <br></br><br></br><strong>Rs {index.productPrice}</strong>\r\n                                            </Card.Text>\r\n                                            {\r\n                                                callFormCheck(index.modelNumber)\r\n                                            }\r\n                                            \r\n                                            \r\n                                            \r\n                                            <br></br>\r\n                                            <Button variant=\"flat\" size=\"1\">Buy</Button>\r\n                                            </Card.Body>\r\n                                    </Card>\r\n                                    \r\n                                    \r\n                                    )\r\n                                }):(null)\r\n                        }\r\n                        {\r\n                            getCompareBtn()      \r\n                        }\r\n                            </Col>\r\n                        </Row>  \r\n                        </div>\r\n                        </center>\r\n                        </Col>\r\n                    </Row> */}\r\n                    </div>\r\n                    </>\r\n    );\r\n\r\n}\r\n\r\nexport default SelCatProducts;","import React  from \"react\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {BsArrowUp} from \"react-icons/bs\";\r\nimport \"../../App.css\";\r\nimport {Row,Col} from \"react-bootstrap\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction Slideshow({offerPosters}){\r\n    \r\n  const navigate = useNavigate();\r\n\r\n    var offerPoster = <div>\r\n        <img className=\"logo_mahavir\"  alt=\"Mandala\" />\r\n      </div>\r\n\r\n    \r\n    \r\n    const handleOfferPosterOnClick=(index)=>{\r\n      localStorage.setItem(\"offerPostersModelNumber\",index.modelNumbers)\r\n      navigate(\"/offers\")\r\n    }\r\n\r\n    var mybutton = document.getElementById(\"myBtn\");\r\n\r\n    window.onscroll = function() {scrollFunction()};\r\n\r\n    function scrollFunction() {\r\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n        mybutton.style.display = \"block\";\r\n    } else {\r\n        mybutton.style.display = \"none\";\r\n    }\r\n    }\r\n\r\n    function topFunction() {\r\n        document.body.scrollTop = 0; \r\n        document.documentElement.scrollTop = 0;\r\n    }\r\n\r\n    return(\r\n    \r\n     \r\n                    <><button onclick={() => topFunction()} id=\"myBtn\" title=\"Go to top\"><BsArrowUp onClick={topFunction} /></button>\r\n                    <Carousel style={{ cursor: \"pointer\" }} className=\"offerslide\">\r\n        {offerPoster = offerPosters.map(index => {\r\n          return (\r\n\r\n            <Carousel.Item interval={1000} onClick={() => handleOfferPosterOnClick(index)}>\r\n              <img id=\"classname\"\r\n                className=\"d-block w-100\"\r\n                src={index.imageUrl}\r\n                alt={index.alt}\r\n                height={500} \r\n                />\r\n            </Carousel.Item>\r\n\r\n\r\n\r\n          );\r\n\r\n        })}\r\n      </Carousel></>\r\n\r\n    );\r\n}\r\nexport default Slideshow; "],"names":["ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","categoryDetail","navigate","useNavigate","map","expand","Navbar","style","background","zIndex","height","bg","Container","fluid","id","placement","Offcanvas","closeButton","Nav","index","Image","thumbnail","src","category_image","NavDropdown","right","title","category","renderMenuOnMount","subCategories","subCat","display","padding","width","subCategoryName","subSubCategories","marginTop","subCategory","subSubCategory","subSubCategoryName","modelNumber","localStorage","setItem","modelNumsToCompare","Set","useState","products","MegaPoster","isMegaPosterFetched","setIsMegaPosterFetched","getItem","split","add","useEffect","axios","method","url","then","response","status","data","isMegaPoster","push","catch","error","console","log","mybutton","document","getElementById","window","onscroll","body","scrollTop","documentElement","position","productList","offerPosters","topFunction","onclick","cursor","interval","modelNumbers","handleOfferPosterOnClick","imageUrl","alt"],"sourceRoot":""}