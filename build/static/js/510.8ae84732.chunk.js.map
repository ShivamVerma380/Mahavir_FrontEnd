{"version":3,"file":"static/js/510.8ae84732.chunk.js","mappings":"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","sources":["components/Admin/Sidebar/AdminNavbar.js","components/Admin/Sidebar/Navbarrrr.js","components/Admin/Sidebar/PendingDelivery.js","components/Admin/Sidebar/SidebarData.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { Navbar } from 'react-bootstrap';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport './Navbar.css'\nimport { SidebarData } from './SidebarData';\nfunction AdminNavbar() {\n  return (\n    <>\n      \n        <Navbar bg=\"dark\" variant='dark' expand={false}>\n          <Container fluid>\n            \n            <Navbar.Toggle  />\n            <Navbar.Offcanvas\n              placement=\"start\"\n            >\n              <Offcanvas.Header closeButton>\n                <Offcanvas.Title >\n                  Admin Panel\n                </Offcanvas.Title>\n              </Offcanvas.Header>\n              <Offcanvas.Body style={{backgroundColor:'black',fontSize:'20px'}}>\n                <Nav className=\"justify-content-start flex-grow-1 pe-3\">\n\n                {SidebarData.map((item, index) => {\n                return (\n                    <Nav.Link  href={\"/#\"+item.path} className={item.cName}>{item.icon}<span className='span'> </span>{item.title}</Nav.Link>\n                    \n                );\n                })}\n                  \n                </Nav>\n                \n              </Offcanvas.Body>\n            </Navbar.Offcanvas>\n          </Container>\n        </Navbar>\n      \n    </>\n  );\n}\n\nexport default AdminNavbar;","import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport './Navbar.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Toast, ToastBody, ToastHeader } from \"reactstrap\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { IconContext } from 'react-icons';\r\nimport { Offcanvas,Button } from 'react-bootstrap';\r\nfunction Navbar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <>\r\n\r\n    \r\n\r\n    \r\n      <IconContext.Provider value={{ color: '#ffff' }}>\r\n        <div className='navbar'>\r\n          <Link to='#' className='menu-bars'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n          <ul className='nav-menu-items' onClick={showSidebar}>\r\n            <li className='navbar-toggle'>\r\n              <Link to='#' className='menu-bars'>\r\n                <AiIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                    \r\n                    <span className='span'>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState }  from \"react\";\r\nimport { Row,Button, Col,Container ,Table,Accordion} from 'react-bootstrap';\r\nimport {setCookie,getCookie} from '../../Cookies';\r\nimport axios from \"axios\";\r\nimport AdminHeader from \"../../Admin/AdminHeader\";\r\nimport AdminNavbar from \"./AdminNavbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Navbar.css';\r\nimport Navbar from './Navbarrrr';\r\nimport url from \"../../../Uri\";\r\nconst PendingDelivery = () => {\r\n    \r\n    const [orders,SetOrders] = useState([]);\r\n    const [isOrdersFetched,SetIsOrdersFetched] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(()=>{\r\n        if(!isOrdersFetched){\r\n            axios.get(url+\"/pending-orders\")\r\n                .then(function(response){\r\n                    if(response.status==200){\r\n                        console.log(\"Success\",response.data)\r\n                        SetOrders(response.data);\r\n                        SetIsOrdersFetched(true);\r\n                    }else{\r\n                        console.log(\"response\",response);\r\n                    }\r\n                }).catch(function(error){\r\n                    console.log(\"Error In Fetching orders\");\r\n\r\n                })\r\n        }\r\n    })\r\n\r\n    function handleOrderClick(order){\r\n        console.log(\"Order clicked\",order);\r\n        let date = new Date();\r\n        var token=getCookie(\"jwtToken\");\r\n        var form_data_body={\r\n            \"orderId\":\"\"+order.orderId,\r\n            \"deliveryDate\":date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear()\r\n        }\r\n        console.log(\"form data body\",form_data_body)\r\n        axios.post(url+\"/order-status\",form_data_body,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+token,\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }).then(function(response){\r\n                if(response.status==200){\r\n                    console.log(\"Success\",response.data);\r\n                    window.location.reload();\r\n                }else{\r\n                    console.log(\"Error\",response);\r\n                }\r\n            }).catch(function(error){\r\n                console.log(\"Error in order-status\",error);\r\n                // toast.warn(\"Error In Fetching orders\",error)\r\n\r\n            })\r\n    }\r\n\r\n    function handleGenerateInvoice(order){\r\n        console.log(\"Invoice\",order)\r\n        console.log(\"Generate Invoice\",JSON.stringify(order));\r\n        localStorage.setItem(\"Invoice\",JSON.stringify(order));\r\n        navigate(\"/invoice\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar/>\r\n        <Container className=\"pendingdeliveries\">\r\n            <h4 style={{margin:\"20px\",textAlign:\"center\"}}>Pending Orders</h4>\r\n\r\n            <Table striped bordered hover >\r\n                <thead>\r\n                    <tr>\r\n                    <th>Order Id</th>\r\n                    <th>Email</th>\r\n                    <th>Buy Date</th>\r\n                    <th>Address</th>\r\n                    <th>Mobile Number</th>\r\n                    <th>Payment Amount</th>\r\n                    <th>Payment Mode</th>\r\n                    <th>Invoice</th>\r\n                    <th>#</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                (isOrdersFetched)?(\r\n                    orders.map((order,index)=>{\r\n                        return(\r\n                            <tr>\r\n                                <td>{order.orderId}</td>\r\n                                <td>{order.buyerEmail}</td>\r\n                                <td>{order.buyDate}</td>\r\n                                <td>{order.userAddress.address+\",\"+order.userAddress.city+\"-\"+order.userAddress.pincode}</td>\r\n                                <td>{order.userAddress.mobileNumber}</td>\r\n                                <td>{order.paymentAmount}</td>\r\n                                <td>{order.paymentMode}</td>\r\n                                <td><Button onClick={()=>handleGenerateInvoice(order)}>👁️‍🗨️</Button></td>\r\n                                <td><Button onClick={()=>handleOrderClick(order)}>✅</Button></td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                ):(null)\r\n            }\r\n                </tbody>\r\n            </Table>\r\n\r\n            \r\n        </Container>\r\n        \r\n      \r\n          \r\n        \r\n      \r\n    \r\n        \r\n        <Accordion flush className=\"mobileviewpendingorders\">\r\n             {\r\n                        (isOrdersFetched)?(\r\n                            orders.map((order,index)=>{\r\n                                return(\r\n                                    <>\r\n                                    <Accordion.Item eventKey={ index}>\r\n        <Accordion.Header>Order Id: {order.orderId}</Accordion.Header>\r\n        <Accordion.Body>\r\n        <Table>\r\n            <tbody>\r\n                                    <tr><td><b>Order Id: </b>{order.orderId}</td></tr>\r\n                                        \r\n                                       <tr><td><b>Email: </b>{order.buyerEmail}</td></tr>\r\n                                       <tr><td><b>Buy Date: </b>{order.buyDate}</td></tr>\r\n                                       <tr><td><b>Address: </b>{order.userAddress.address+\",\"+order.userAddress.city+\"-\"+order.userAddress.pincode}</td></tr>\r\n                                       <tr><td><b>Contact: </b>{order.userAddress.mobileNumber}</td></tr>\r\n                                       <tr><td><b>Payment Amount: </b>{order.paymentAmount}</td></tr>\r\n                                       <tr><td><b>Payment Mode: </b>{order.paymentMode}</td></tr>\r\n                                       <tr><td><b>Invoice: </b><Button onClick={()=>handleGenerateInvoice(order)}>👁️‍🗨️</Button></td></tr>\r\n                                       <tr><td><b>#: </b><Button onClick={()=>handleOrderClick(order)}>✅</Button></td></tr>\r\n                                       </tbody>\r\n        </Table>\r\n                                       </Accordion.Body>\r\n      </Accordion.Item>\r\n                                       </>\r\n                                );\r\n                            })\r\n                        ):(\r\n                            null\r\n                        )\r\n                    }\r\n                    </Accordion>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PendingDelivery;","import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as MdIcons from 'react-icons/md';\nimport * as RiIcons from 'react-icons/ri';\n\nexport const SidebarData = [\n  {\n    title: 'Add Item',\n    path: '/admin',\n    icon: <AiIcons.AiFillHome />,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Pending Orders',\n    path: '/pendingdelivery',\n    icon: <MdIcons.MdOutlineDeliveryDining />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Completed Orders',\n    path: '/completedorders',\n    icon: <MdIcons.MdOutlineDeliveryDining />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'User Complaints',\n    path: '/allcomplaints',\n    icon: <RiIcons.RiFileList2Fill />,\n    cName: 'nav-text'\n  },\n\n  {\n    title: 'Add New',\n    path:'/AddNew',\n    icon: <MdIcons.MdOutlineProductionQuantityLimits/>,\n    cName: 'nav-text'\n  },\n  \n  {\n    title: 'Logout',\n    path: '/',\n    icon: <RiIcons.RiLogoutBoxRFill />,\n    cName: 'nav-text'\n  },\n  {\n    title: 'Upload Excel',\n    path:'/upload',\n    icon: <AiIcons.AiOutlineUpload/>,\n    cName: 'nav-text'\n  },\n];"],"names":["bg","variant","expand","fluid","placement","closeButton","style","backgroundColor","fontSize","className","SidebarData","item","index","href","path","cName","icon","title","useState","orders","SetOrders","isOrdersFetched","SetIsOrdersFetched","navigate","useNavigate","handleOrderClick","order","console","log","date","Date","token","getCookie","form_data_body","orderId","getDate","getMonth","getFullYear","axios","url","headers","then","response","status","data","window","location","reload","catch","error","handleGenerateInvoice","JSON","stringify","localStorage","setItem","useEffect","AdminNavbar","Container","margin","textAlign","Table","striped","bordered","hover","map","buyerEmail","buyDate","userAddress","address","city","pincode","mobileNumber","paymentAmount","paymentMode","Button","onClick","Accordion","flush","eventKey"],"sourceRoot":""}