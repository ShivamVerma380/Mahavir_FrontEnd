{"version":3,"file":"static/js/480.28a922a0.chunk.js","mappings":"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","sources":["components/Checkout/BuyNowCheckout/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col } from 'reactstrap';\r\nimport { setCookie, getCookie } from '../../Cookies';\r\nimport axios from \"axios\";\r\nimport url from '../../../Uri';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { Form, Row } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './Payment.css';\r\nimport Header from \"../../Header\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n\r\nfunction Payment() {\r\n\r\n    try {\r\n        console.log(\"Buy Product\", localStorage.getItem(\"buyProduct\"))\r\n        var product = localStorage.getItem(\"buyProduct\");\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    const [cartModels, SetCartModels] = useState(new Map());\r\n    // const [paymentType, SetPaymentType] = useState(\"\");\r\n    var paymentType = \"\";\r\n    var arr = [];\r\n    console.log(\"product\", product)\r\n    arr.push(product);\r\n    // console.log(\"arr\",arr)\r\n\r\n    if (product != null) {\r\n        var arr = product.split(\",\");\r\n        arr.map(a => {\r\n            var item = a.split(\"=\")\r\n            cartModels.set(item[0], item[1])\r\n        })\r\n        // cartModels.set(product.modelNumber,1);\r\n    }\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // console.log(\"CartModels\",cartModels)\r\n\r\n    // console.log(\"Buy Amount\",localStorage.getItem(\"Amount\"));\r\n\r\n    var products = Object.fromEntries(cartModels);\r\n\r\n    var address = JSON.parse(localStorage.getItem(\"selectedaddress\"));\r\n    // console.log(\"Address\",address)\r\n\r\n    const [isPaymentDone, SetIsPaymentDone] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isActive1, setIsActive1] = useState(false);\r\n\r\n    let date = new Date()\r\n\r\n\r\n    // localStorage.setItem(\"paymentType\",\"\");\r\n\r\n\r\n    const PayAmount = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"Payment Type\",localStorage.getItem(\"paymentType\"));\r\n        if (localStorage.getItem(\"Amount\") === \"\") {\r\n            // alert(\"Please enter amount\");\r\n            toast.warn(\"Please enter amount\");\r\n        } else if (localStorage.getItem(\"paymentType\") !== \"cashOnDelivery\") {\r\n            // alert(\"Please select payment type\")\r\n            toast.warn(<b>Please select payment type</b>)\r\n        }\r\n        else {\r\n            if (localStorage.getItem(\"paymentType\") === \"cashOnDelivery\") {\r\n\r\n                // document.getElementById(\"payment_nextbtn\").setDis\r\n                toast.info(<b>Processing your order...</b>)\r\n                e.currentTarget.disabled = true;\r\n\r\n                localStorage.setItem(\"paymentmode\", 'cashOnDelivery');\r\n\r\n                console.log(\"Products\", products);\r\n\r\n                if (products.size === 0) {\r\n                    toast.error(<b>Please add products to cart</b>)\r\n                    return;\r\n                }\r\n\r\n                const form_data_body = {\r\n                    products,\r\n                    \"userAddress\": {\r\n                        \"name\": address.name,\r\n                        \"mobileNumber\": address.mobileNumber,\r\n                        \"pincode\": address.pincode,\r\n                        \"locality\": address.locality,\r\n                        \"address\": address.address,\r\n                        \"city\": address.city,\r\n                        \"state\": address.state,\r\n                        \"addressType\": \"home\"\r\n                    },\r\n                    \"buyDate\": date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear(),\r\n                    \"paymentMode\": \"Cash On Delivery\",\r\n                    \"paymentAmount\": localStorage.getItem(\"Amount\")\r\n                }\r\n                // console.log(\"Form Data Body\",form_data_body)\r\n                axios.post(url + \"/order\", form_data_body, {\r\n                    headers: {\r\n                        \"Authorization\": \"Bearer \" + getCookie(\"jwtToken\"),\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(res => {\r\n                    if (res.status == 200) {\r\n                        // console.log(\"response\",res)\r\n                        toast.success(<b>Order Placed Successfully</b>)\r\n                        SetIsPaymentDone(true)\r\n                        SetIsPaymentDone(true)\r\n\r\n                        localStorage.removeItem(\"buyProduct\");\r\n                        localStorage.removeItem(\"paymentType\");\r\n                        if (localStorage.getItem(\"buyProductType\")===\"cart\") {\r\n                            setCookie(\"CartModels\", \"\",20);\r\n                        }\r\n                        navigate(\"/paymentsuccess\")\r\n                        e.currentTarget.disabled = false;\r\n                        // navigate(\"/invoice\")\r\n                        // localStorage.setItem(\"BuyProductInvoice\",cartModels);\r\n                    } else {\r\n                        // console.log(\"Error\",res)\r\n                        toast.error(<b>{res.data.message}</b>)\r\n                        e.currentTarget.disabled = false;\r\n                    }\r\n                }).catch(err => {\r\n                    toast.error(<b>{err.response.data.message}</b>)\r\n                    console.log(\"Error\", err.response)\r\n                    e.currentTarget.disabled = false;\r\n                })\r\n            } else {\r\n                const options = {\r\n                    key: \"rzp_live_HD5qU0zoy9Ntd2\",\r\n                    key_secret: \"GXZHI3xZnA6BFaCZHEYQt2De\",\r\n                    amount: localStorage.getItem(\"Amount\") * 100,\r\n                    // amount:parseInt(localStorage.getItem(\"price\"))*100,\r\n                    currency: \"INR\",\r\n                    name: \"Mahavir Electronics\",\r\n                    description: \"Payment for products\",\r\n                    handler: function (response) {\r\n                        // alert(response.razorpay_payment_id);\r\n                        // console.log(\"error in sending payment:\",response);\r\n                        if (localStorage.getItem(\"Amount\") != null) {\r\n                            const form_data_body = {\r\n                                products,\r\n                                \"userAddress\": {\r\n                                    \"name\": address.name,\r\n                                    \"mobileNumber\": address.mobileNumber,\r\n                                    \"pincode\": address.pincode,\r\n                                    \"locality\": address.locality,\r\n                                    \"address\": address.address,\r\n                                    \"city\": address.city,\r\n                                    \"state\": address.state,\r\n                                    \"addressType\": \"home\"\r\n                                },\r\n                                \"buyDate\": date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear(),\r\n                                \"paymentMode\": \"razorpay\",\r\n                                \"paymentAmount\": localStorage.getItem(\"Amount\"),\r\n                                \"paymentId\": response.razorpay_payment_id\r\n                            }\r\n                            // console.log(\"Form Data Body\",form_data_body)\r\n                            axios.post(url + \"/order\", form_data_body, {\r\n                                headers: {\r\n                                    \"Authorization\": \"Bearer \" + getCookie(\"jwtToken\"),\r\n                                    \"Content-Type\": \"application/json\"\r\n                                }\r\n                            }).then(res => {\r\n                                if (res.status == 200) {\r\n                                    // console.log(\"response\",res)\r\n                                    SetIsPaymentDone(true)\r\n                                    SetIsPaymentDone(true)\r\n                                    localStorage.removeItem(\"paymentType\");\r\n                                    if (localStorage.getItem(\"buyProductType\")===\"cart\") {\r\n                                        setCookie(\"CartModels\", \"\",20);\r\n                                    }\r\n                                    localStorage.removeItem(\"buyProduct\");\r\n                                    localStorage.removeItem(\"paymentType\");\r\n                                    navigate(\"/paymentsuccess\")\r\n                                    // navigate(\"/invoice\")\r\n                                    // localStorage.setItem(\"BuyProductInvoice\",cartModels);\r\n                                }\r\n                            }).catch(err => {\r\n                                console.log(\"Error\", err.response)\r\n                            })\r\n\r\n                        }\r\n\r\n\r\n\r\n                    },\r\n                    prefill: {\r\n                        name: address.name,\r\n                        contact: address.mobileNumber,\r\n                        email: \"shivam380.testing@gmail.com\"\r\n                    },\r\n                    notes: {\r\n                        address: address.address\r\n                    },\r\n                    theme: {\r\n                        color: \"#F37254\"\r\n                    }\r\n                };\r\n                var rzp1 = new window.Razorpay(options);\r\n                rzp1.open();\r\n            }\r\n            // alert(localStorage.getItem(\"price\"))\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer position=\"top-center\" />\r\n            {\r\n                (isPaymentDone) ? (\r\n                    <h1>Payment Done</h1>\r\n                ) : (\r\n                    <>\r\n                        <body style={{ background: \"whitesmoke\" }}>\r\n                            <Header />\r\n                            <Row style={{ height: \"100%\", width: \"100%\", marginTop: \"70px\", background: \"white\" }}>\r\n                                <Col md={4}></Col>\r\n                                <center>\r\n                                    <Col md={8} className=\"payment\">\r\n                                        <h3>Payment</h3>\r\n                                        <p style={{ fontSize: \"16px\", marginTop: \"20px\" }}>Choose payment method below</p>\r\n                                        <Row>\r\n                                            {/* <Col md={8}>\r\n                                        <Card style={{ width: \"200px\", height: \"100px\", border: \"1px solid black\", margin: \"10px\", backgroundColor: isActive ? 'lightblue' : '' }}>\r\n                                            <Card.Img id=\"razorpay\" onClick={() => { localStorage.setItem(\"paymentType\",'razorpay'); setIsActive(true); setIsActive1(false); } } style={{ padding: \"35px\", width: \"200px\", height: \"100px\" }} variant=\"top\" src=\"https://upload.wikimedia.org/wikipedia/en/8/89/Razorpay_logo.svg\" />\r\n                                        \r\n                                        </Card>\r\n                                    </Col> */}\r\n                                            <Col md={12}>\r\n                                                <Card style={{ width: \"150px\", height: \"100px\", border: \"1px solid black\", margin: \"10px\", backgroundColor: isActive1 ? 'lightblue' : '' }} onClick={() => { localStorage.setItem(\"paymentType\", \"cashOnDelivery\"); paymentType = 'cashOnDelivery'; setIsActive1(true); setIsActive(false); }}>\r\n                                                    <Card.Img id=\"cashOnDelivery\" onClick={() => { localStorage.setItem(\"paymentType\", 'cashOnDelivery'); setIsActive1(true); setIsActive(false); }} style={{ padding: \"10px\", width: \"100px\", height: \"100px\", marginLeft: \"20px\" }} variant=\"top\" src=\"https://cdn-icons-png.flaticon.com/512/1019/1019607.png\" />\r\n                                                    {/* onClick={SetPaymentType(\"cashOnDelivery\")} */}\r\n                                                </Card>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <h3>Cash On Delivery</h3>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        {/* <Form >\r\n        <Form.Check type=\"radio\" id=\"cashOnDelivery\" name=\"paymentoption\" value=\"Cash On Delivery\" label=\"Cash On Delivery\"/>\r\n        <Form.Check type=\"radio\" id=\"razorpay\" name=\"paymentoption\" value=\"Pay Online\" label=\"Pay Online\"/>\r\n    </Form>\r\n    <Button onClick={PayAmount}>Next</Button> */}\r\n                                        <Row>\r\n                                            <Col md={3}></Col>\r\n                                            <Col md={6}>\r\n                                                <Button id=\"payment_nextbtn\" className=\"payment_nextbtn\" onClick={PayAmount}>Next</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </center>\r\n\r\n                            </Row>\r\n                            <Footer />\r\n                        </body></>\r\n\r\n\r\n                )\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Payment;\r\n"],"names":["console","log","localStorage","getItem","product","error","useState","Map","cartModels","arr","push","split","map","a","item","set","navigate","useNavigate","products","Object","fromEntries","address","JSON","parse","isPaymentDone","SetIsPaymentDone","setIsActive","isActive1","setIsActive1","date","Date","position","style","background","Header","Row","height","width","marginTop","md","className","fontSize","Card","border","margin","backgroundColor","onClick","setItem","id","padding","marginLeft","variant","src","e","preventDefault","toast","currentTarget","disabled","size","form_data_body","name","mobileNumber","pincode","locality","city","state","getDate","getMonth","getFullYear","axios","url","headers","getCookie","then","res","status","removeItem","setCookie","data","message","catch","err","response","options","key","key_secret","amount","currency","description","handler","razorpay_payment_id","prefill","contact","email","notes","theme","color","window","Razorpay","open","Footer"],"sourceRoot":""}